@model BusinessTripApplication.ViewModels.RegistrationViewModel

@{
    Layout = "~/Views/Shared/NoToolBarLayout.cshtml";
}


@if (Model.Message != null)
{
    if (Convert.ToBoolean(Model.Status))
    {
        <div class="alert alert-success">
            <strong>Success!</strong>@Model.Message
        </div>
    }
    else
    {
        <div class="alert alert-danger">
            <strong>Error!</strong>@Model.Message
        </div>
    }
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
        @Scripts.Render("~/bundles/jqueryval")

        <script type="text/javascript" src="@Url.Content("/Scripts/ValidationScriptRegistration.js")"></script>
        <script type="text/javascript" src="@Url.Content("/Scripts/ParseURL_registration.js")"></script>

        <div class="row">
            <div class="col-md-3"></div>
            <h2 class="col-md-6">Registration</h2>
            <div class="col-md-3"></div>
        </div>


        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">

                <div class="form-group offset-md-3 col-md-6">
                    @Html.LabelFor(model => model.User.Name, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.User.Name, new { htmlAttributes = new { @class = "form-control", @data_toggle = "tooltip", @title = "Hooray!", @data_placement = "bottom" } })
                    @* @Html.ValidationMessageFor(model => model.Name, "", new { @id= "text-danger-username", @class = "text-danger" }) *@
                    @Html.ValidationMessage("", new { id = "username_error_message", style = "color:red" })
                </div>
            </div>


            <br />
            <div class="row">
                <div class="form-group offset-md-3 col-md-6">
                    @Html.LabelFor(model => model.User.Email, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control", @data_toggle = "tooltip", @title = "Hooray!", @data_placement = "bottom" } })
                    @* @Html.ValidationMessageFor(model => model.Email, "", new { @id = "text-danger-email", @class = "text-danger" }) *@
                    @Html.ValidationMessage("", new { id = "email_error_message", style = "color:red" })
                </div>

            </div>


            <br />
            <div class="row">
                <div class="form-group offset-md-3 col-md-6">
                    @Html.LabelFor(model => model.User.Password, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.User.Password, new { htmlAttributes = new { @class = "form-control", data_toggle = "tooltip", title = "Hooray!", data_placement = "bottom" } })
                    @* @Html.ValidationMessageFor(model => model.Password, "", new { @id = "text-danger-password", @class = "text-danger" }) *@
                    @Html.ValidationMessage("", new { id = "password_error_message", style = "color:red" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="form-group offset-md-3 col-md-6">
                    <input id="btn_Create" onclick="return false" type="submit" value="Create" class="btn btn-primary btn-block" />
                    <p>If you already have an account please <button id="btn_log_in" type="button" onclick="window.open('https://localhost:44328/User/Login?email=' + document.getElementById('User_Email').value, '_self', 'resizable=yes')" class="btn btn-primary btn-sm" style="height: 100%">Log In</button> </p>

                </div>
            </div>
        </div>
}

